services:
  redis:
    image: redis:7-alpine
    container_name: architecture-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-defaultpassword}
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    networks:
      - architecture-net

  architecture-function:
    build: .
    container_name: architecture-function
    ports:
      - "8080:8080"
    environment:
      - PROJECT_ID=${PROJECT_ID:-devops-realm}
      - REGION=${REGION:-europe-west4}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-defaultpassword}
      - CACHE_TTL=${CACHE_TTL:-300}
      - GOOGLE_APPLICATION_CREDENTIALS=/app/credentials/service-account.json
    volumes:
      - ./credentials:/app/credentials:ro
      - ./logs:/app/logs
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    networks:
      - architecture-net

  # redis-commander:
  #   image: rediscommander/redis-commander:latest
  #   container_name: redis-commander
  #   ports:
  #     - "8081:8081"
  #   environment:
  #     - REDIS_HOSTS=local:redis:6379:0:${REDIS_PASSWORD:-defaultpassword}
  #     - HTTP_USER=${REDIS_COMMANDER_USER:-admin}
  #     - HTTP_PASSWORD=${REDIS_COMMANDER_PASSWORD:-admin}
  #   depends_on:
  #     - redis
  #   restart: unless-stopped
  #   networks:
  #     - architecture-net

volumes:
  redis_data:
    driver: local

networks:
  architecture-net:
    driver: bridge